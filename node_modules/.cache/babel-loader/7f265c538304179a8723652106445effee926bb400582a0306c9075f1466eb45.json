{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/polanai-cli-main/src/scenes/loginPage/Form.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Box, Button, TextField, Typography, useTheme } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst convertKitAPIKey = \"YOUR_CONVERTKIT_API_KEY\";\nconst convertKitFormID = \"YOUR_CONVERTKIT_FORM_ID\";\nconst registerSchema = yup.object().shape({\n  firstName: yup.string().required(\"First name is required\"),\n  lastName: yup.string().required(\"Last name is required\"),\n  email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  occupation: yup.string().required(\"Occupation is required\")\n});\nconst initialValuesRegister = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  occupation: \"\"\n};\nconst Form = () => {\n  _s();\n  const {\n    palette\n  } = useTheme();\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const submitToConvertKit = async values => {\n    try {\n      const response = await fetch(`https://api.convertkit.com/v3/forms/${convertKitFormID}/subscribe`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          api_key: convertKitAPIKey,\n          email: values.email,\n          first_name: values.firstName,\n          fields: {\n            last_name: values.lastName,\n            // Send last name as a custom field\n            occupation: values.occupation // Custom field for occupation\n          }\n        })\n      });\n\n      if (response.ok) {\n        setSuccessMessage(\"Successfully subscribed!\");\n        setErrorMessage(\"\");\n      } else {\n        const errorData = await response.json();\n        setErrorMessage(errorData.message || \"Subscription failed.\");\n      }\n    } catch (error) {\n      setErrorMessage(\"An error occurred. Please try again later.\");\n    }\n  };\n  const handleFormSubmit = async (values, onSubmitProps) => {\n    await submitToConvertKit(values);\n    onSubmitProps.resetForm();\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    onSubmit: handleFormSubmit,\n    initialValues: initialValuesRegister,\n    validationSchema: registerSchema,\n    children: _ref => {\n      let {\n        values,\n        errors,\n        touched,\n        handleBlur,\n        handleChange,\n        handleSubmit\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"grid\",\n          gap: \"20px\",\n          sx: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"First Name\",\n            name: \"firstName\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.firstName,\n            error: Boolean(touched.firstName) && Boolean(errors.firstName),\n            helperText: touched.firstName && errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Last Name\",\n            name: \"lastName\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.lastName,\n            error: Boolean(touched.lastName) && Boolean(errors.lastName),\n            helperText: touched.lastName && errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            name: \"email\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.email,\n            error: Boolean(touched.email) && Boolean(errors.email),\n            helperText: touched.email && errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Occupation\",\n            name: \"occupation\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.occupation,\n            error: Boolean(touched.occupation) && Boolean(errors.occupation),\n            helperText: touched.occupation && errors.occupation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"green\",\n          mt: \"1rem\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"red\",\n          mt: \"1rem\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: \"1rem\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            sx: {\n              backgroundColor: palette.primary.main,\n              color: palette.background.alt,\n              \"&:hover\": {\n                color: palette.primary.main\n              }\n            },\n            children: \"Join the Waitlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"neZvcJTC/hsyTfsNcy+gKXRlqoA=\", false, function () {\n  return [useTheme];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","Box","Button","TextField","Typography","useTheme","Formik","yup","jsxDEV","_jsxDEV","convertKitAPIKey","convertKitFormID","registerSchema","object","shape","firstName","string","required","lastName","email","occupation","initialValuesRegister","Form","_s","palette","successMessage","setSuccessMessage","errorMessage","setErrorMessage","submitToConvertKit","values","response","fetch","method","headers","body","JSON","stringify","api_key","first_name","fields","last_name","ok","errorData","json","message","error","handleFormSubmit","onSubmitProps","resetForm","onSubmit","initialValues","validationSchema","children","_ref","errors","touched","handleBlur","handleChange","handleSubmit","display","gap","sx","width","label","name","onBlur","onChange","value","Boolean","helperText","fileName","_jsxFileName","lineNumber","columnNumber","color","mt","type","fullWidth","backgroundColor","primary","main","background","alt","_c","$RefreshReg$"],"sources":["/Users/apple/Downloads/polanai-cli-main/src/scenes/loginPage/Form.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Box, Button, TextField, Typography, useTheme } from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst convertKitAPIKey = \"YOUR_CONVERTKIT_API_KEY\";\r\nconst convertKitFormID = \"YOUR_CONVERTKIT_FORM_ID\";\r\n\r\nconst registerSchema = yup.object().shape({\r\n  firstName: yup.string().required(\"First name is required\"),\r\n  lastName: yup.string().required(\"Last name is required\"),\r\n  email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n  occupation: yup.string().required(\"Occupation is required\"),\r\n});\r\n\r\nconst initialValuesRegister = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  occupation: \"\",\r\n};\r\n\r\nconst Form = () => {\r\n  const { palette } = useTheme();\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const submitToConvertKit = async (values) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.convertkit.com/v3/forms/${convertKitFormID}/subscribe`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            api_key: convertKitAPIKey,\r\n            email: values.email,\r\n            first_name: values.firstName,\r\n            fields: {\r\n              last_name: values.lastName, // Send last name as a custom field\r\n              occupation: values.occupation, // Custom field for occupation\r\n            },\r\n          }),\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        setSuccessMessage(\"Successfully subscribed!\");\r\n        setErrorMessage(\"\");\r\n      } else {\r\n        const errorData = await response.json();\r\n        setErrorMessage(errorData.message || \"Subscription failed.\");\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\"An error occurred. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async (values, onSubmitProps) => {\r\n    await submitToConvertKit(values);\r\n    onSubmitProps.resetForm();\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={handleFormSubmit}\r\n      initialValues={initialValuesRegister}\r\n      validationSchema={registerSchema}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n      }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Box display=\"grid\" gap=\"20px\" sx={{ width: \"100%\" }}>\r\n            <TextField\r\n              label=\"First Name\"\r\n              name=\"firstName\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.firstName}\r\n              error={Boolean(touched.firstName) && Boolean(errors.firstName)}\r\n              helperText={touched.firstName && errors.firstName}\r\n            />\r\n            <TextField\r\n              label=\"Last Name\"\r\n              name=\"lastName\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.lastName}\r\n              error={Boolean(touched.lastName) && Boolean(errors.lastName)}\r\n              helperText={touched.lastName && errors.lastName}\r\n            />\r\n            <TextField\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.email}\r\n              error={Boolean(touched.email) && Boolean(errors.email)}\r\n              helperText={touched.email && errors.email}\r\n            />\r\n            <TextField\r\n              label=\"Occupation\"\r\n              name=\"occupation\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.occupation}\r\n              error={Boolean(touched.occupation) && Boolean(errors.occupation)}\r\n              helperText={touched.occupation && errors.occupation}\r\n            />\r\n          </Box>\r\n\r\n          {successMessage && (\r\n            <Typography color=\"green\" mt=\"1rem\">\r\n              {successMessage}\r\n            </Typography>\r\n          )}\r\n          {errorMessage && (\r\n            <Typography color=\"red\" mt=\"1rem\">\r\n              {errorMessage}\r\n            </Typography>\r\n          )}\r\n\r\n          <Box mt=\"1rem\">\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              sx={{\r\n                backgroundColor: palette.primary.main,\r\n                color: palette.background.alt,\r\n                \"&:hover\": { color: palette.primary.main },\r\n              }}\r\n            >\r\n              Join the Waitlist\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}